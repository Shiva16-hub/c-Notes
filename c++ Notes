C++ is a general-purpose programming language and is widely used nowadays for competitive programming. 
It has imperative, object-oriented and generic programming features. C++ runs on lots of platforms like Windows, Linux, Unix, Mac etc.

-> Why Use C++ :
. C++ is one of the world's most popular programming languages.

. C++ can be found in today's operating systems, Graphical User Interfaces, and embedded systems.

. C++ is an object-oriented programming language which gives a clear structure to programs and allows code to be reused, lowering development costs.

. C++ is portable and can be used to develop applications that can be adapted to multiple platforms.

. C++ is fun and easy to learn!

. As C++ is close to C, C# and Java, it makes it easy for programmers to switch to C++ or vice versa. 

* Difference between C and C++ ?
C++ was developed as an extension of C, and both languages have almost the same syntax.

The main difference between C and C++ is that C++ support classes and objects, while C does not.

* The first program in c++ to print the hello world?
#include <iostream>
using namespace std;

int main() {
  cout << "Hello World!";
  return 0;
}

* NOTE -> 
1. #include <iostream> is a header file library that lets us work with input and output objects, 
such as cout (used in line 5). Header files add functionality to C++ programs.
2. using namespace std means that we can use names for objects and variables from the standard library.
3. A blank line. C++ ignores white space. But we use it to make the code more readable.

4: Another thing that always appear in a C++ program, is int main(). This is called a function. Any code inside its curly brackets {} will be executed.

5: cout (pronounced "see-out") is an object used together with the insertion operator (<<) to output/print text. In our example it will output "Hello World".
6. return 0 ends the main function.

7. Do not forget to add the closing curly bracket } to actually end the main function.

* Omitting Namespace:
You might see some C++ programs that runs without the standard namespace library. The using namespace std line can be omitted and replaced with the std keyword, 
followed by the :: operator for some objects:

#include <iostream>

int main() {
  std::cout << "Hello World!";
  return 0;
}

* New Lines
TO insert a new line by using \n operator.
#include <iostream>
using namespace std;

int main() {
  cout << "Hello World! \n";
  cout << "I am learning C++";
  return 0;
}

NOTE -> 
\t	Creates a horizontal tab	
\\	Inserts a backslash character (\)	
\"	Inserts a double quote character

C++ COMMENTS ->
1- SINGLE LINE COMMENT :
Single-line comments start with two forward slashes (//).

Any text between // and the end of the line is ignored by the compiler (will not be executed).

2- Multi-line Comments :
Multi-line comments start with /* and ends with */.

Any text between /* and */ will be ignored by the compiler:

* C++ Variables:
Variables are containers for storing data values.

In C++, there are different types of variables (defined with different keywords), for example:

int - stores integers (whole numbers), without decimals, such as 123 or -123
double - stores floating point numbers, with decimals, such as 19.99 or -19.99
char - stores single characters, such as 'a' or 'B'. Char values are surrounded by single quotes
string - stores text, such as "Hello World". String values are surrounded by double quotes
bool - stores values with two states: true or false

* Declaring (Creating) Variables
To create a variable, specify the type and assign it a value:

     type variableName = value;
     
